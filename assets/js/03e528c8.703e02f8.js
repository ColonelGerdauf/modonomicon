"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[838],{3905:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return d}});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var p=n.createContext({}),c=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},m=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),k=c(a),d=i,u=k["".concat(p,".").concat(d)]||k[d]||s[d]||o;return a?n.createElement(u,r(r({ref:t},m),{},{components:a})):n.createElement(u,r({ref:t},m))}));function d(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=a.length,r=new Array(o);r[0]=k;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var c=2;c<o;c++)r[c]=a[c];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},1063:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return s}});var n=a(3117),i=a(102),o=(a(7294),a(3905)),r=["components"],l={sidebar_position:30,title:"State Matchers"},p=void 0,c={unversionedId:"multiblocks/state-matchers",id:"multiblocks/state-matchers",title:"State Matchers",description:"Each state matcher represents one block at one specific position in the multiblock, and depending on the type of matcher it may only allow one specific block, or a wide range of blocks in that position.",source:"@site/docs/multiblocks/state-matchers.md",sourceDirName:"multiblocks",slug:"/multiblocks/state-matchers",permalink:"/modonomicon/docs/multiblocks/state-matchers",editUrl:"https://github.com/klikli-dev/modonomicon/tree/documentation/docs/multiblocks/state-matchers.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30,title:"State Matchers"},sidebar:"tutorialSidebar",previous:{title:"Defining Multiblocks",permalink:"/modonomicon/docs/multiblocks/defining-multiblocks"},next:{title:"Localization",permalink:"/modonomicon/docs/advanced/localization"}},m={},s=[{value:"Common Attributes",id:"common-attributes",level:2},{value:"Attribute Types",id:"attribute-types",level:2},{value:"Block Matcher",id:"block-matcher",level:2},{value:"Attributes",id:"attributes",level:3},{value:"Usage Examples",id:"usage-examples",level:3},{value:"Block State Matcher",id:"block-state-matcher",level:2},{value:"Attributes",id:"attributes-1",level:3},{value:"Usage Examples",id:"usage-examples-1",level:3}],k={toc:s};function d(e){var t=e.components,a=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,n.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Each state matcher represents one block at one specific position in the multiblock, and depending on the type of matcher it may only allow one specific block, or a wide range of blocks in that position. "),(0,o.kt)("p",null,"State matchers are defined ",(0,o.kt)("a",{parentName:"p",href:"./defining-multiblocks#mappings"},"in the ",(0,o.kt)("inlineCode",{parentName:"a"},"mappings")," part of the multiblock definition"),"."),(0,o.kt)("h2",{id:"common-attributes"},"Common Attributes"),(0,o.kt)("p",null,"All state matchers need to have the following attributes:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"type")," (State Matcher Type, ",(0,o.kt)("em",{parentName:"li"},"mandatory"),")")),(0,o.kt)("p",null,"A ResourceLocation identifying the type of state matcher to use.",(0,o.kt)("br",{parentName:"p"}),"\n","Example: ",(0,o.kt)("inlineCode",{parentName:"p"},"modonomicon:block")," "),(0,o.kt)("h2",{id:"attribute-types"},"Attribute Types"),(0,o.kt)("p",null,"Besides standard JSON types, state matchers support the following attributes:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Block")," (String)"),(0,o.kt)("p",{parentName:"li"},"A ResourceLocation for a block, in the format ",(0,o.kt)("inlineCode",{parentName:"p"},"modid:block"),".",(0,o.kt)("br",{parentName:"p"}),"\n","Example: ",(0,o.kt)("inlineCode",{parentName:"p"},"minecraft:stone")," ")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"BlockState")," (String)"),(0,o.kt)("p",{parentName:"li"},"A BlockState string as used in the Minecraft ",(0,o.kt)("inlineCode",{parentName:"p"},"setblock")," command.",(0,o.kt)("br",{parentName:"p"}),"\n","Example: ",(0,o.kt)("inlineCode",{parentName:"p"},"minecraft:chest[facing=east]"),".  "),(0,o.kt)("p",{parentName:"li"},"The block state properties can be omitted, in which case the default BlockState will be used.",(0,o.kt)("br",{parentName:"p"}),"\n","Example: ",(0,o.kt)("inlineCode",{parentName:"p"},"minecraft:chest"),"."),(0,o.kt)("p",{parentName:"li"},"See ",(0,o.kt)("a",{parentName:"p",href:"https://minecraft.fandom.com/wiki/Commands/setblock"},"https://minecraft.fandom.com/wiki/Commands/setblock")," for more information")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Tag")," (String)"),(0,o.kt)("p",{parentName:"li"},"A Tag string that is based on the BlockState string as used in the ",(0,o.kt)("inlineCode",{parentName:"p"},"setblock")," command, but prefixed with ",(0,o.kt)("inlineCode",{parentName:"p"},"#"),".",(0,o.kt)("br",{parentName:"p"}),"\n","Example: ",(0,o.kt)("inlineCode",{parentName:"p"},"#forge:chests[facing=east]")),(0,o.kt)("p",{parentName:"li"},"The block state properties can be omitted, in which case the block state properties will be ignored when matching.",(0,o.kt)("br",{parentName:"p"}),"\n","Example: ",(0,o.kt)("inlineCode",{parentName:"p"},"#forge:chests"),"."))),(0,o.kt)("h2",{id:"block-matcher"},"Block Matcher"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"modonomicon:block")),(0,o.kt)("p",null,"Block matchers will ignore the BlockState and check only if the placed block fits the configured block."),(0,o.kt)("h3",{id:"attributes"},"Attributes"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"block")," (Block, ",(0,o.kt)("em",{parentName:"p"},"mandatory"),")"),(0,o.kt)("p",{parentName:"li"},"The Block to match against when checking if a given block fits this matcher."))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"display")," (BlockState, ",(0,o.kt)("em",{parentName:"p"},"optional"),")"),(0,o.kt)("p",{parentName:"li"},"Defaults to the default BlockState of the ",(0,o.kt)("inlineCode",{parentName:"p"},"block")," property.",(0,o.kt)("br",{parentName:"p"}),"\n","The BlockState to display in the multiblock preview. "),(0,o.kt)("div",{parentName:"li",className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If you omit the BlockState properties (",(0,o.kt)("inlineCode",{parentName:"p"},"[key=value]"),"), Modonomicon will display the Block's default BlockState."))))),(0,o.kt)("h3",{id:"usage-examples"},"Usage Examples"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 1:")," Matching (and displaying) a stone block"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "modonomicon:block",\n  "block": "minecraft:stone"\n}\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 3:")," Matching any chest, but displaying a west-facing chest"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "type": "modonomicon:block",\n    "display": "minecraft:chest[facing=west]",\n    "block": "minecraft:chest"\n}\n')),(0,o.kt)("h2",{id:"block-state-matcher"},"Block State Matcher"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Type:")," ",(0,o.kt)("inlineCode",{parentName:"p"},"modonomicon:blockstate")),(0,o.kt)("p",null,"BlockState matchers will check for the exact BlockState properties provided."),(0,o.kt)("h3",{id:"attributes-1"},"Attributes"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"block")," (BlockState, ",(0,o.kt)("em",{parentName:"p"},"mandatory"),")"),(0,o.kt)("p",{parentName:"li"},"BlockState to match against when checking if a given block fits this matcher."),(0,o.kt)("div",{parentName:"li",className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If you omit the BlockState properties (",(0,o.kt)("inlineCode",{parentName:"p"},"[key=value]"),"), Modonomicon will match against it's default BlockState. ")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"display")," (BlockState, ",(0,o.kt)("em",{parentName:"p"},"optional"),")"),(0,o.kt)("p",{parentName:"li"},"Defaults to the value of the ",(0,o.kt)("inlineCode",{parentName:"p"},"block")," property.",(0,o.kt)("br",{parentName:"p"}),"\n","The block to display in the multiblock preview. "),(0,o.kt)("div",{parentName:"li",className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If you omit the BlockState properties (",(0,o.kt)("inlineCode",{parentName:"p"},"[key=value]"),"), Modonomicon will display the Block's default BlockState."))))),(0,o.kt)("h3",{id:"usage-examples-1"},"Usage Examples"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example:")," Matching only west-facing chests, but displaying an east-facing chest"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "type": "modonomicon:blockstate",\n    "display": "minecraft:chest[facing=east]",\n    "block": "minecraft:chest[facing=west]"\n}\n')))}d.isMDXComponent=!0}}]);