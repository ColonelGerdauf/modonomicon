"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9383],{3905:(t,e,a)=>{a.d(e,{Zo:()=>p,kt:()=>d});var o=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function n(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,o)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?n(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function c(t,e){if(null==t)return{};var a,o,r=function(t,e){if(null==t)return{};var a,o,r={},n=Object.keys(t);for(o=0;o<n.length;o++)a=n[o],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);for(o=0;o<n.length;o++)a=n[o],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var i=o.createContext({}),s=function(t){var e=o.useContext(i),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},p=function(t){var e=s(t.components);return o.createElement(i.Provider,{value:e},t.children)},m="mdxType",k={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},u=o.forwardRef((function(t,e){var a=t.components,r=t.mdxType,n=t.originalType,i=t.parentName,p=c(t,["components","mdxType","originalType","parentName"]),m=s(a),u=r,d=m["".concat(i,".").concat(u)]||m[u]||k[u]||n;return a?o.createElement(d,l(l({ref:e},p),{},{components:a})):o.createElement(d,l({ref:e},p))}));function d(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var n=a.length,l=new Array(n);l[0]=u;var c={};for(var i in e)hasOwnProperty.call(e,i)&&(c[i]=e[i]);c.originalType=t,c[m]="string"==typeof t?t:r,l[1]=c;for(var s=2;s<n;s++)l[s]=a[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,a)}u.displayName="MDXCreateElement"},6638:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>l,default:()=>k,frontMatter:()=>n,metadata:()=>c,toc:()=>s});var o=a(7462),r=(a(7294),a(3905));const n={sidebar_position:30},l="Block State Matcher",c={unversionedId:"multiblocks/state-matchers/blockstate-matcher",id:"multiblocks/state-matchers/blockstate-matcher",title:"Block State Matcher",description:"Typeblockstate",source:"@site/docs/multiblocks/state-matchers/blockstate-matcher.md",sourceDirName:"multiblocks/state-matchers",slug:"/multiblocks/state-matchers/blockstate-matcher",permalink:"/modonomicon/docs/multiblocks/state-matchers/blockstate-matcher",draft:!1,editUrl:"https://github.com/klikli-dev/modonomicon/tree/documentation/docs/multiblocks/state-matchers/blockstate-matcher.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30},sidebar:"tutorialSidebar",previous:{title:"Block Matcher",permalink:"/modonomicon/docs/multiblocks/state-matchers/block-matcher"},next:{title:"Block State Property Matcher",permalink:"/modonomicon/docs/multiblocks/state-matchers/blockstate-property-matcher"}},i={},s=[{value:"Attributes",id:"attributes",level:2},{value:"<strong>block</strong> (BlockState, <em>mandatory</em>)",id:"block-blockstate-mandatory",level:3},{value:"<strong>display</strong> (BlockState, <em>optional</em>)",id:"display-blockstate-optional",level:3},{value:"Usage Examples",id:"usage-examples",level:2}],p={toc:s},m="wrapper";function k(t){let{components:e,...a}=t;return(0,r.kt)(m,(0,o.Z)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"block-state-matcher"},"Block State Matcher"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Type:")," ",(0,r.kt)("inlineCode",{parentName:"p"},"modonomicon:blockstate")),(0,r.kt)("p",null,"BlockState matchers will check for ",(0,r.kt)("strong",{parentName:"p"},"all existing properties for a Block")," BlockState. "),(0,r.kt)("p",null,":::warn"),(0,r.kt)("p",null,"Block State Matchers  match against the full blockstate (= all blockstate properties the block has).\nIf you do not provide a value for any of the properties, it will check against the default value."),(0,r.kt)("p",null,":::"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"In most use cases you will want to check only against the properties you actually provide, and ignore all other properties.\nFor this behaviour, see ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"./blockstate-property-matcher"},"BlockStateProperty Matcher")),".")),(0,r.kt)("h2",{id:"attributes"},"Attributes"),(0,r.kt)("h3",{id:"block-blockstate-mandatory"},(0,r.kt)("strong",{parentName:"h3"},"block")," (BlockState, ",(0,r.kt)("em",{parentName:"h3"},"mandatory"),")"),(0,r.kt)("p",null,"  BlockState to match against when checking if a given block fits this matcher."),(0,r.kt)("p",null,"  :::info"),(0,r.kt)("p",null,"  If you omit the BlockState properties (",(0,r.kt)("inlineCode",{parentName:"p"},"[key=value]"),"), Modonomicon will match against it's default BlockState. "),(0,r.kt)("p",null,"  :::"),(0,r.kt)("h3",{id:"display-blockstate-optional"},(0,r.kt)("strong",{parentName:"h3"},"display")," (BlockState, ",(0,r.kt)("em",{parentName:"h3"},"optional"),")"),(0,r.kt)("p",null,"  Defaults to the value of the ",(0,r.kt)("inlineCode",{parentName:"p"},"block")," property.",(0,r.kt)("br",{parentName:"p"}),"\n","The block to display in the multiblock preview. "),(0,r.kt)("p",null,"  :::info"),(0,r.kt)("p",null,"  If you omit the BlockState properties (",(0,r.kt)("inlineCode",{parentName:"p"},"[key=value]"),"), Modonomicon will display the Block's default BlockState."),(0,r.kt)("p",null,"  :::"),(0,r.kt)("h2",{id:"usage-examples"},"Usage Examples"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")," Matching only west-facing chests, but displaying an east-facing chest"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "type": "modonomicon:blockstate",\n    "display": "minecraft:chest[facing=east]",\n    "block": "minecraft:chest[facing=west]"\n}\n')))}k.isMDXComponent=!0}}]);