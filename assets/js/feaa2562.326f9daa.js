"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2589],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var o=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=o.createContext({}),p=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=p(e.components);return o.createElement(c.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},k=o.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=p(r),k=a,d=m["".concat(c,".").concat(k)]||m[k]||u[k]||n;return r?o.createElement(d,l(l({ref:t},s),{},{components:r})):o.createElement(d,l({ref:t},s))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,l=new Array(n);l[0]=k;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[m]="string"==typeof e?e:a,l[1]=i;for(var p=2;p<n;p++)l[p]=r[p];return o.createElement.apply(null,l)}return o.createElement.apply(null,r)}k.displayName="MDXCreateElement"},5150:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>n,metadata:()=>i,toc:()=>p});var o=r(7462),a=(r(7294),r(3905));const n={sidebar_position:31},l="Block State Property Matcher",i={unversionedId:"multiblocks/state-matchers/blockstate-property-matcher",id:"multiblocks/state-matchers/blockstate-property-matcher",title:"Block State Property Matcher",description:"Typeblockstateproperty",source:"@site/docs/multiblocks/state-matchers/blockstate-property-matcher.md",sourceDirName:"multiblocks/state-matchers",slug:"/multiblocks/state-matchers/blockstate-property-matcher",permalink:"/modonomicon/docs/multiblocks/state-matchers/blockstate-property-matcher",draft:!1,editUrl:"https://github.com/klikli-dev/modonomicon/tree/documentation/docs/multiblocks/state-matchers/blockstate-property-matcher.md",tags:[],version:"current",sidebarPosition:31,frontMatter:{sidebar_position:31},sidebar:"tutorialSidebar",previous:{title:"Block State Matcher",permalink:"/modonomicon/docs/multiblocks/state-matchers/blockstate-matcher"},next:{title:"Display (Only) Matcher",permalink:"/modonomicon/docs/multiblocks/state-matchers/display-matcher"}},c={},p=[{value:"Attributes",id:"attributes",level:2},{value:"<strong>block</strong> (BlockState, <em>mandatory</em>)",id:"block-blockstate-mandatory",level:3},{value:"<strong>display</strong> (BlockState, <em>optional</em>)",id:"display-blockstate-optional",level:3},{value:"Usage Examples",id:"usage-examples",level:2}],s={toc:p},m="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,o.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"block-state-property-matcher"},"Block State Property Matcher"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Type:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"modonomicon:blockstateproperty")),(0,a.kt)("p",null,"BlockStateProperty matchers will check for ",(0,a.kt)("strong",{parentName:"p"},"only the properties you provide"),", not all existing BlockState properties for that block."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"This matcher check only against the properties you actually provide, and ignore all other properties.\nE.g.: If you provide a ",(0,a.kt)("inlineCode",{parentName:"p"},"facing")," property, but the block you are checking against also has a ",(0,a.kt)("inlineCode",{parentName:"p"},"waterlogged")," property, it will match as long as the ",(0,a.kt)("inlineCode",{parentName:"p"},"facing")," property is correct, and ignore the value of the ",(0,a.kt)("inlineCode",{parentName:"p"},"waterlogged")," property.")),(0,a.kt)("h2",{id:"attributes"},"Attributes"),(0,a.kt)("h3",{id:"block-blockstate-mandatory"},(0,a.kt)("strong",{parentName:"h3"},"block")," (BlockState, ",(0,a.kt)("em",{parentName:"h3"},"mandatory"),")"),(0,a.kt)("p",null,"  BlockState to match against when checking if a given block fits this matcher."),(0,a.kt)("p",null,"  :::info"),(0,a.kt)("p",null,"  If you omit the BlockState properties (",(0,a.kt)("inlineCode",{parentName:"p"},"[key=value]"),"), Modonomicon will match against it's default BlockState. "),(0,a.kt)("p",null,"  :::"),(0,a.kt)("h3",{id:"display-blockstate-optional"},(0,a.kt)("strong",{parentName:"h3"},"display")," (BlockState, ",(0,a.kt)("em",{parentName:"h3"},"optional"),")"),(0,a.kt)("p",null,"  Defaults to the value of the ",(0,a.kt)("inlineCode",{parentName:"p"},"block")," property.",(0,a.kt)("br",{parentName:"p"}),"\n","The block to display in the multiblock preview. "),(0,a.kt)("p",null,"  :::info"),(0,a.kt)("p",null,"  If you omit the BlockState properties (",(0,a.kt)("inlineCode",{parentName:"p"},"[key=value]"),"), Modonomicon will display the Block's default BlockState."),(0,a.kt)("p",null,"  :::"),(0,a.kt)("h2",{id:"usage-examples"},"Usage Examples"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example:")," Matches lit candles, inependent of the amount of candles, and if they are waterlogged or not (although the latter of course has the in-game constraint that waterlogged will unlight the candle ...)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "type": "modonomicon:blockstateproperty",\n    "display": "minecraft:white_candle[lit=true]",\n    "block": "minecraft:white_candle[lit=true]"\n}\n')))}u.isMDXComponent=!0}}]);